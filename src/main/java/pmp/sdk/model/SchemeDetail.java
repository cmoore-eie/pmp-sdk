/*
 * Snippets API
 * Test description
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@snippets.local
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pmp.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import pmp.sdk.model.SchemeDetailArrayValue;
import pmp.sdk.model.SchemeDetailParam;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * SchemeDetail
 */
@JsonPropertyOrder({
  SchemeDetail.JSON_PROPERTY_ITEM_IDENTIFIER,
  SchemeDetail.JSON_PROPERTY_ANCESTOR_ITEM_IDENTIFIER,
  SchemeDetail.JSON_PROPERTY_STRING_VALUE,
  SchemeDetail.JSON_PROPERTY_BOOLEAN_VALUE,
  SchemeDetail.JSON_PROPERTY_DATE_VALUE,
  SchemeDetail.JSON_PROPERTY_INTEGER_VALUE,
  SchemeDetail.JSON_PROPERTY_DECIMAL_VALUE,
  SchemeDetail.JSON_PROPERTY_MONEY_VALUE,
  SchemeDetail.JSON_PROPERTY_SCHEME_CALC_VALUE_TYPE,
  SchemeDetail.JSON_PROPERTY_COMPARATOR,
  SchemeDetail.JSON_PROPERTY_PARENT_CODE,
  SchemeDetail.JSON_PROPERTY_CONDITION,
  SchemeDetail.JSON_PROPERTY_FORCE_VALUE,
  SchemeDetail.JSON_PROPERTY_TIME_DURATION,
  SchemeDetail.JSON_PROPERTY_COST_DISCOUNT,
  SchemeDetail.JSON_PROPERTY_MIN_MAX,
  SchemeDetail.JSON_PROPERTY_CURRENCY,
  SchemeDetail.JSON_PROPERTY_SCHEME_COST_TYPE,
  SchemeDetail.JSON_PROPERTY_SCHEME_OPERATOR_TYPE,
  SchemeDetail.JSON_PROPERTY_SCHEME_SOURCE_TYPE,
  SchemeDetail.JSON_PROPERTY_SCHEME_TIMEFRAME,
  SchemeDetail.JSON_PROPERTY_SCHEME_VALUE_TYPE,
  SchemeDetail.JSON_PROPERTY_SCHEME_VALIDATION_TYPE,
  SchemeDetail.JSON_PROPERTY_SCHEME,
  SchemeDetail.JSON_PROPERTY_SCHEME_DETAIL_PARAMS,
  SchemeDetail.JSON_PROPERTY_SCHEME_DETAIL_ARRAY_VALUES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-07-30T00:50:45.283009+02:00[Europe/Warsaw]")
public class SchemeDetail {
  public static final String JSON_PROPERTY_ITEM_IDENTIFIER = "itemIdentifier";
  private String itemIdentifier;

  public static final String JSON_PROPERTY_ANCESTOR_ITEM_IDENTIFIER = "ancestorItemIdentifier";
  private JsonNullable<String> ancestorItemIdentifier = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STRING_VALUE = "stringValue";
  private JsonNullable<String> stringValue = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_BOOLEAN_VALUE = "booleanValue";
  private JsonNullable<Boolean> booleanValue = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_DATE_VALUE = "dateValue";
  private JsonNullable<Date> dateValue = JsonNullable.<Date>undefined();

  public static final String JSON_PROPERTY_INTEGER_VALUE = "integerValue";
  private JsonNullable<Integer> integerValue = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_DECIMAL_VALUE = "decimalValue";
  private JsonNullable<String> decimalValue = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MONEY_VALUE = "moneyValue";
  private JsonNullable<String> moneyValue = JsonNullable.<String>undefined();

  /**
   * Gets or Sets schemeCalcValueType
   */
  public enum SchemeCalcValueTypeEnum {
    TEST("test");

    private String value;

    SchemeCalcValueTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SchemeCalcValueTypeEnum fromValue(String value) {
      for (SchemeCalcValueTypeEnum b : SchemeCalcValueTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_SCHEME_CALC_VALUE_TYPE = "schemeCalcValueType";
  private JsonNullable<SchemeCalcValueTypeEnum> schemeCalcValueType = JsonNullable.<SchemeCalcValueTypeEnum>undefined();

  public static final String JSON_PROPERTY_COMPARATOR = "comparator";
  private String comparator;

  public static final String JSON_PROPERTY_PARENT_CODE = "parentCode";
  private String parentCode;

  public static final String JSON_PROPERTY_CONDITION = "condition";
  private JsonNullable<String> condition = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FORCE_VALUE = "forceValue";
  private Boolean forceValue;

  public static final String JSON_PROPERTY_TIME_DURATION = "timeDuration";
  private JsonNullable<Integer> timeDuration = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_COST_DISCOUNT = "costDiscount";
  private JsonNullable<BigDecimal> costDiscount = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_MIN_MAX = "minMax";
  private String minMax;

  /**
   * Gets or Sets currency
   */
  public enum CurrencyEnum {
    GBP("gbp"),
    
    USD("usd"),
    
    EURO("euro");

    private String value;

    CurrencyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CurrencyEnum fromValue(String value) {
      for (CurrencyEnum b : CurrencyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private JsonNullable<CurrencyEnum> currency = JsonNullable.<CurrencyEnum>undefined();

  /**
   * Gets or Sets schemeCostType
   */
  public enum SchemeCostTypeEnum {
    NOCOST("nocost"),
    
    DISCOUNT("discount");

    private String value;

    SchemeCostTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SchemeCostTypeEnum fromValue(String value) {
      for (SchemeCostTypeEnum b : SchemeCostTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_SCHEME_COST_TYPE = "schemeCostType";
  private JsonNullable<SchemeCostTypeEnum> schemeCostType = JsonNullable.<SchemeCostTypeEnum>undefined();

  /**
   * Gets or Sets schemeOperatorType
   */
  public enum SchemeOperatorTypeEnum {
    EQUALS("equals"),
    
    LESSTHAN("lessthan"),
    
    GREATERTHAN("greaterthan");

    private String value;

    SchemeOperatorTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SchemeOperatorTypeEnum fromValue(String value) {
      for (SchemeOperatorTypeEnum b : SchemeOperatorTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_SCHEME_OPERATOR_TYPE = "schemeOperatorType";
  private JsonNullable<SchemeOperatorTypeEnum> schemeOperatorType = JsonNullable.<SchemeOperatorTypeEnum>undefined();

  /**
   * Gets or Sets schemeSourceType
   */
  public enum SchemeSourceTypeEnum {
    COVERAGE("coverage"),
    
    UNDERWRITINGISSUE("underwritingissue"),
    
    EXCLUSION("exclusion"),
    
    MODIFIER("modifier"),
    
    CONDITION("condition"),
    
    COVERAGETERM("coverageterm"),
    
    ATTRIBUTE("attribute"),
    
    VALIDATIONCONTEXT("validationcontext"),
    
    COVERAGEOPTIONTERM("coverageoptionterm"),
    
    CONDITIONTERM("conditionterm"),
    
    CONDITIONOPTIONTERM("conditionoptionterm"),
    
    EXCLUSIONTERM("exclusionterm"),
    
    EXCLUSIONOPTIONTERM("exclusionoptionterm"),
    
    RATECOSTCATEGORY("ratecostcategory"),
    
    ELIGIBILITY("eligibility"),
    
    PCF("pcf"),
    
    COVERAGEDEPENDENCY("coveragedependency"),
    
    COVERAGESYNC("coveragesync");

    private String value;

    SchemeSourceTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SchemeSourceTypeEnum fromValue(String value) {
      for (SchemeSourceTypeEnum b : SchemeSourceTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SCHEME_SOURCE_TYPE = "schemeSourceType";
  private SchemeSourceTypeEnum schemeSourceType;

  /**
   * Gets or Sets schemeTimeframe
   */
  public enum SchemeTimeframeEnum {
    DAYS("days"),
    
    WEEKS("weeks"),
    
    MONTHS("months"),
    
    YEARS("years");

    private String value;

    SchemeTimeframeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SchemeTimeframeEnum fromValue(String value) {
      for (SchemeTimeframeEnum b : SchemeTimeframeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_SCHEME_TIMEFRAME = "schemeTimeframe";
  private JsonNullable<SchemeTimeframeEnum> schemeTimeframe = JsonNullable.<SchemeTimeframeEnum>undefined();

  /**
   * Gets or Sets schemeValueType
   */
  public enum SchemeValueTypeEnum {
    STRING("string"),
    
    OBJECT("object"),
    
    CALCULATED("calculated"),
    
    OTHER("other"),
    
    LIST("list"),
    
    STRING_MULTILINE("string_multiline"),
    
    BOOLEAN("boolean"),
    
    INTEGER("integer"),
    
    INTEGER_RANGE("integer_range"),
    
    INTEGER_SET("integer_set"),
    
    MONEY_RANGE("money_range"),
    
    MONEY_SET("money_set"),
    
    LONG("long"),
    
    DECIMAL("decimal"),
    
    DATE("date"),
    
    MONEY("money"),
    
    TYPEKEY("typekey"),
    
    OPTION("option"),
    
    LABEL("label"),
    
    LOCATION("location"),
    
    MONEY_USD("money_usd"),
    
    MONEY_EUR("money_eur"),
    
    MONEY_GBP("money_gbp"),
    
    PERCENT("percent"),
    
    PERCENTDEC("percentdec"),
    
    YEAR("year"),
    
    ADDRESS("address"),
    
    AFPFUNCTION("afpfunction");

    private String value;

    SchemeValueTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SchemeValueTypeEnum fromValue(String value) {
      for (SchemeValueTypeEnum b : SchemeValueTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_SCHEME_VALUE_TYPE = "schemeValueType";
  private JsonNullable<SchemeValueTypeEnum> schemeValueType = JsonNullable.<SchemeValueTypeEnum>undefined();

  /**
   * Gets or Sets schemeValidationType
   */
  public enum SchemeValidationTypeEnum {
    ATMOST("atmost"),
    
    ATLEAST("atleast"),
    
    EXACTLY("exactly");

    private String value;

    SchemeValidationTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SchemeValidationTypeEnum fromValue(String value) {
      for (SchemeValidationTypeEnum b : SchemeValidationTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_SCHEME_VALIDATION_TYPE = "schemeValidationType";
  private JsonNullable<SchemeValidationTypeEnum> schemeValidationType = JsonNullable.<SchemeValidationTypeEnum>undefined();

  public static final String JSON_PROPERTY_SCHEME = "scheme";
  private JsonNullable<String> scheme = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SCHEME_DETAIL_PARAMS = "schemeDetailParams";
  private List<SchemeDetailParam> schemeDetailParams = new ArrayList<>();

  public static final String JSON_PROPERTY_SCHEME_DETAIL_ARRAY_VALUES = "schemeDetailArrayValues";
  private List<SchemeDetailArrayValue> schemeDetailArrayValues = new ArrayList<>();


  public SchemeDetail itemIdentifier(String itemIdentifier) {
    
    this.itemIdentifier = itemIdentifier;
    return this;
  }

   /**
   * Get itemIdentifier
   * @return itemIdentifier
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ITEM_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getItemIdentifier() {
    return itemIdentifier;
  }


  public void setItemIdentifier(String itemIdentifier) {
    this.itemIdentifier = itemIdentifier;
  }


  public SchemeDetail ancestorItemIdentifier(String ancestorItemIdentifier) {
    this.ancestorItemIdentifier = JsonNullable.<String>of(ancestorItemIdentifier);
    
    return this;
  }

   /**
   * Get ancestorItemIdentifier
   * @return ancestorItemIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getAncestorItemIdentifier() {
        return ancestorItemIdentifier.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ANCESTOR_ITEM_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<String> getAncestorItemIdentifier_JsonNullable() {
    return ancestorItemIdentifier;
  }
  
  @JsonProperty(JSON_PROPERTY_ANCESTOR_ITEM_IDENTIFIER)
  public void setAncestorItemIdentifier_JsonNullable(JsonNullable<String> ancestorItemIdentifier) {
    this.ancestorItemIdentifier = ancestorItemIdentifier;
  }

  public void setAncestorItemIdentifier(String ancestorItemIdentifier) {
    this.ancestorItemIdentifier = JsonNullable.<String>of(ancestorItemIdentifier);
  }


  public SchemeDetail stringValue(String stringValue) {
    this.stringValue = JsonNullable.<String>of(stringValue);
    
    return this;
  }

   /**
   * Get stringValue
   * @return stringValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getStringValue() {
        return stringValue.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STRING_VALUE)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<String> getStringValue_JsonNullable() {
    return stringValue;
  }
  
  @JsonProperty(JSON_PROPERTY_STRING_VALUE)
  public void setStringValue_JsonNullable(JsonNullable<String> stringValue) {
    this.stringValue = stringValue;
  }

  public void setStringValue(String stringValue) {
    this.stringValue = JsonNullable.<String>of(stringValue);
  }


  public SchemeDetail booleanValue(Boolean booleanValue) {
    this.booleanValue = JsonNullable.<Boolean>of(booleanValue);
    
    return this;
  }

   /**
   * Get booleanValue
   * @return booleanValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getBooleanValue() {
        return booleanValue.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BOOLEAN_VALUE)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<Boolean> getBooleanValue_JsonNullable() {
    return booleanValue;
  }
  
  @JsonProperty(JSON_PROPERTY_BOOLEAN_VALUE)
  public void setBooleanValue_JsonNullable(JsonNullable<Boolean> booleanValue) {
    this.booleanValue = booleanValue;
  }

  public void setBooleanValue(Boolean booleanValue) {
    this.booleanValue = JsonNullable.<Boolean>of(booleanValue);
  }


  public SchemeDetail dateValue(Date dateValue) {
    this.dateValue = JsonNullable.<Date>of(dateValue);
    
    return this;
  }

   /**
   * Get dateValue
   * @return dateValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Date getDateValue() {
        return dateValue.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE_VALUE)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<Date> getDateValue_JsonNullable() {
    return dateValue;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE_VALUE)
  public void setDateValue_JsonNullable(JsonNullable<Date> dateValue) {
    this.dateValue = dateValue;
  }

  public void setDateValue(Date dateValue) {
    this.dateValue = JsonNullable.<Date>of(dateValue);
  }


  public SchemeDetail integerValue(Integer integerValue) {
    this.integerValue = JsonNullable.<Integer>of(integerValue);
    
    return this;
  }

   /**
   * Get integerValue
   * minimum: -2147483648
   * maximum: 2147483647
   * @return integerValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Integer getIntegerValue() {
        return integerValue.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INTEGER_VALUE)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<Integer> getIntegerValue_JsonNullable() {
    return integerValue;
  }
  
  @JsonProperty(JSON_PROPERTY_INTEGER_VALUE)
  public void setIntegerValue_JsonNullable(JsonNullable<Integer> integerValue) {
    this.integerValue = integerValue;
  }

  public void setIntegerValue(Integer integerValue) {
    this.integerValue = JsonNullable.<Integer>of(integerValue);
  }


  public SchemeDetail decimalValue(String decimalValue) {
    this.decimalValue = JsonNullable.<String>of(decimalValue);
    
    return this;
  }

   /**
   * Get decimalValue
   * @return decimalValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDecimalValue() {
        return decimalValue.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DECIMAL_VALUE)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<String> getDecimalValue_JsonNullable() {
    return decimalValue;
  }
  
  @JsonProperty(JSON_PROPERTY_DECIMAL_VALUE)
  public void setDecimalValue_JsonNullable(JsonNullable<String> decimalValue) {
    this.decimalValue = decimalValue;
  }

  public void setDecimalValue(String decimalValue) {
    this.decimalValue = JsonNullable.<String>of(decimalValue);
  }


  public SchemeDetail moneyValue(String moneyValue) {
    this.moneyValue = JsonNullable.<String>of(moneyValue);
    
    return this;
  }

   /**
   * Get moneyValue
   * @return moneyValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMoneyValue() {
        return moneyValue.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MONEY_VALUE)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<String> getMoneyValue_JsonNullable() {
    return moneyValue;
  }
  
  @JsonProperty(JSON_PROPERTY_MONEY_VALUE)
  public void setMoneyValue_JsonNullable(JsonNullable<String> moneyValue) {
    this.moneyValue = moneyValue;
  }

  public void setMoneyValue(String moneyValue) {
    this.moneyValue = JsonNullable.<String>of(moneyValue);
  }


  public SchemeDetail schemeCalcValueType(SchemeCalcValueTypeEnum schemeCalcValueType) {
    this.schemeCalcValueType = JsonNullable.<SchemeCalcValueTypeEnum>of(schemeCalcValueType);
    
    return this;
  }

   /**
   * Get schemeCalcValueType
   * @return schemeCalcValueType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SchemeCalcValueTypeEnum getSchemeCalcValueType() {
        return schemeCalcValueType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SCHEME_CALC_VALUE_TYPE)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<SchemeCalcValueTypeEnum> getSchemeCalcValueType_JsonNullable() {
    return schemeCalcValueType;
  }
  
  @JsonProperty(JSON_PROPERTY_SCHEME_CALC_VALUE_TYPE)
  public void setSchemeCalcValueType_JsonNullable(JsonNullable<SchemeCalcValueTypeEnum> schemeCalcValueType) {
    this.schemeCalcValueType = schemeCalcValueType;
  }

  public void setSchemeCalcValueType(SchemeCalcValueTypeEnum schemeCalcValueType) {
    this.schemeCalcValueType = JsonNullable.<SchemeCalcValueTypeEnum>of(schemeCalcValueType);
  }


  public SchemeDetail comparator(String comparator) {
    
    this.comparator = comparator;
    return this;
  }

   /**
   * Get comparator
   * @return comparator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMPARATOR)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public String getComparator() {
    return comparator;
  }


  public void setComparator(String comparator) {
    this.comparator = comparator;
  }


  public SchemeDetail parentCode(String parentCode) {
    
    this.parentCode = parentCode;
    return this;
  }

   /**
   * Get parentCode
   * @return parentCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PARENT_CODE)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public String getParentCode() {
    return parentCode;
  }


  public void setParentCode(String parentCode) {
    this.parentCode = parentCode;
  }


  public SchemeDetail condition(String condition) {
    this.condition = JsonNullable.<String>of(condition);
    
    return this;
  }

   /**
   * Get condition
   * @return condition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCondition() {
        return condition.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONDITION)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<String> getCondition_JsonNullable() {
    return condition;
  }
  
  @JsonProperty(JSON_PROPERTY_CONDITION)
  public void setCondition_JsonNullable(JsonNullable<String> condition) {
    this.condition = condition;
  }

  public void setCondition(String condition) {
    this.condition = JsonNullable.<String>of(condition);
  }


  public SchemeDetail forceValue(Boolean forceValue) {
    
    this.forceValue = forceValue;
    return this;
  }

   /**
   * Get forceValue
   * @return forceValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FORCE_VALUE)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public Boolean getForceValue() {
    return forceValue;
  }


  public void setForceValue(Boolean forceValue) {
    this.forceValue = forceValue;
  }


  public SchemeDetail timeDuration(Integer timeDuration) {
    this.timeDuration = JsonNullable.<Integer>of(timeDuration);
    
    return this;
  }

   /**
   * Get timeDuration
   * minimum: -2147483648
   * maximum: 2147483647
   * @return timeDuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Integer getTimeDuration() {
        return timeDuration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIME_DURATION)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<Integer> getTimeDuration_JsonNullable() {
    return timeDuration;
  }
  
  @JsonProperty(JSON_PROPERTY_TIME_DURATION)
  public void setTimeDuration_JsonNullable(JsonNullable<Integer> timeDuration) {
    this.timeDuration = timeDuration;
  }

  public void setTimeDuration(Integer timeDuration) {
    this.timeDuration = JsonNullable.<Integer>of(timeDuration);
  }


  public SchemeDetail costDiscount(BigDecimal costDiscount) {
    this.costDiscount = JsonNullable.<BigDecimal>of(costDiscount);
    
    return this;
  }

   /**
   * Get costDiscount
   * @return costDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public BigDecimal getCostDiscount() {
        return costDiscount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COST_DISCOUNT)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<BigDecimal> getCostDiscount_JsonNullable() {
    return costDiscount;
  }
  
  @JsonProperty(JSON_PROPERTY_COST_DISCOUNT)
  public void setCostDiscount_JsonNullable(JsonNullable<BigDecimal> costDiscount) {
    this.costDiscount = costDiscount;
  }

  public void setCostDiscount(BigDecimal costDiscount) {
    this.costDiscount = JsonNullable.<BigDecimal>of(costDiscount);
  }


  public SchemeDetail minMax(String minMax) {
    
    this.minMax = minMax;
    return this;
  }

   /**
   * Get minMax
   * @return minMax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MIN_MAX)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public String getMinMax() {
    return minMax;
  }


  public void setMinMax(String minMax) {
    this.minMax = minMax;
  }


  public SchemeDetail currency(CurrencyEnum currency) {
    this.currency = JsonNullable.<CurrencyEnum>of(currency);
    
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public CurrencyEnum getCurrency() {
        return currency.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<CurrencyEnum> getCurrency_JsonNullable() {
    return currency;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  public void setCurrency_JsonNullable(JsonNullable<CurrencyEnum> currency) {
    this.currency = currency;
  }

  public void setCurrency(CurrencyEnum currency) {
    this.currency = JsonNullable.<CurrencyEnum>of(currency);
  }


  public SchemeDetail schemeCostType(SchemeCostTypeEnum schemeCostType) {
    this.schemeCostType = JsonNullable.<SchemeCostTypeEnum>of(schemeCostType);
    
    return this;
  }

   /**
   * Get schemeCostType
   * @return schemeCostType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SchemeCostTypeEnum getSchemeCostType() {
        return schemeCostType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SCHEME_COST_TYPE)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<SchemeCostTypeEnum> getSchemeCostType_JsonNullable() {
    return schemeCostType;
  }
  
  @JsonProperty(JSON_PROPERTY_SCHEME_COST_TYPE)
  public void setSchemeCostType_JsonNullable(JsonNullable<SchemeCostTypeEnum> schemeCostType) {
    this.schemeCostType = schemeCostType;
  }

  public void setSchemeCostType(SchemeCostTypeEnum schemeCostType) {
    this.schemeCostType = JsonNullable.<SchemeCostTypeEnum>of(schemeCostType);
  }


  public SchemeDetail schemeOperatorType(SchemeOperatorTypeEnum schemeOperatorType) {
    this.schemeOperatorType = JsonNullable.<SchemeOperatorTypeEnum>of(schemeOperatorType);
    
    return this;
  }

   /**
   * Get schemeOperatorType
   * @return schemeOperatorType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SchemeOperatorTypeEnum getSchemeOperatorType() {
        return schemeOperatorType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SCHEME_OPERATOR_TYPE)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<SchemeOperatorTypeEnum> getSchemeOperatorType_JsonNullable() {
    return schemeOperatorType;
  }
  
  @JsonProperty(JSON_PROPERTY_SCHEME_OPERATOR_TYPE)
  public void setSchemeOperatorType_JsonNullable(JsonNullable<SchemeOperatorTypeEnum> schemeOperatorType) {
    this.schemeOperatorType = schemeOperatorType;
  }

  public void setSchemeOperatorType(SchemeOperatorTypeEnum schemeOperatorType) {
    this.schemeOperatorType = JsonNullable.<SchemeOperatorTypeEnum>of(schemeOperatorType);
  }


  public SchemeDetail schemeSourceType(SchemeSourceTypeEnum schemeSourceType) {
    
    this.schemeSourceType = schemeSourceType;
    return this;
  }

   /**
   * Get schemeSourceType
   * @return schemeSourceType
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SCHEME_SOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SchemeSourceTypeEnum getSchemeSourceType() {
    return schemeSourceType;
  }


  public void setSchemeSourceType(SchemeSourceTypeEnum schemeSourceType) {
    this.schemeSourceType = schemeSourceType;
  }


  public SchemeDetail schemeTimeframe(SchemeTimeframeEnum schemeTimeframe) {
    this.schemeTimeframe = JsonNullable.<SchemeTimeframeEnum>of(schemeTimeframe);
    
    return this;
  }

   /**
   * Get schemeTimeframe
   * @return schemeTimeframe
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SchemeTimeframeEnum getSchemeTimeframe() {
        return schemeTimeframe.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SCHEME_TIMEFRAME)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<SchemeTimeframeEnum> getSchemeTimeframe_JsonNullable() {
    return schemeTimeframe;
  }
  
  @JsonProperty(JSON_PROPERTY_SCHEME_TIMEFRAME)
  public void setSchemeTimeframe_JsonNullable(JsonNullable<SchemeTimeframeEnum> schemeTimeframe) {
    this.schemeTimeframe = schemeTimeframe;
  }

  public void setSchemeTimeframe(SchemeTimeframeEnum schemeTimeframe) {
    this.schemeTimeframe = JsonNullable.<SchemeTimeframeEnum>of(schemeTimeframe);
  }


  public SchemeDetail schemeValueType(SchemeValueTypeEnum schemeValueType) {
    this.schemeValueType = JsonNullable.<SchemeValueTypeEnum>of(schemeValueType);
    
    return this;
  }

   /**
   * Get schemeValueType
   * @return schemeValueType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SchemeValueTypeEnum getSchemeValueType() {
        return schemeValueType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SCHEME_VALUE_TYPE)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<SchemeValueTypeEnum> getSchemeValueType_JsonNullable() {
    return schemeValueType;
  }
  
  @JsonProperty(JSON_PROPERTY_SCHEME_VALUE_TYPE)
  public void setSchemeValueType_JsonNullable(JsonNullable<SchemeValueTypeEnum> schemeValueType) {
    this.schemeValueType = schemeValueType;
  }

  public void setSchemeValueType(SchemeValueTypeEnum schemeValueType) {
    this.schemeValueType = JsonNullable.<SchemeValueTypeEnum>of(schemeValueType);
  }


  public SchemeDetail schemeValidationType(SchemeValidationTypeEnum schemeValidationType) {
    this.schemeValidationType = JsonNullable.<SchemeValidationTypeEnum>of(schemeValidationType);
    
    return this;
  }

   /**
   * Get schemeValidationType
   * @return schemeValidationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SchemeValidationTypeEnum getSchemeValidationType() {
        return schemeValidationType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SCHEME_VALIDATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<SchemeValidationTypeEnum> getSchemeValidationType_JsonNullable() {
    return schemeValidationType;
  }
  
  @JsonProperty(JSON_PROPERTY_SCHEME_VALIDATION_TYPE)
  public void setSchemeValidationType_JsonNullable(JsonNullable<SchemeValidationTypeEnum> schemeValidationType) {
    this.schemeValidationType = schemeValidationType;
  }

  public void setSchemeValidationType(SchemeValidationTypeEnum schemeValidationType) {
    this.schemeValidationType = JsonNullable.<SchemeValidationTypeEnum>of(schemeValidationType);
  }


  public SchemeDetail scheme(String scheme) {
    this.scheme = JsonNullable.<String>of(scheme);
    
    return this;
  }

   /**
   * Get scheme
   * @return scheme
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getScheme() {
        return scheme.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SCHEME)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<String> getScheme_JsonNullable() {
    return scheme;
  }
  
  @JsonProperty(JSON_PROPERTY_SCHEME)
  public void setScheme_JsonNullable(JsonNullable<String> scheme) {
    this.scheme = scheme;
  }

  public void setScheme(String scheme) {
    this.scheme = JsonNullable.<String>of(scheme);
  }


  public SchemeDetail schemeDetailParams(List<SchemeDetailParam> schemeDetailParams) {
    
    this.schemeDetailParams = schemeDetailParams;
    return this;
  }

  public SchemeDetail addSchemeDetailParamsItem(SchemeDetailParam schemeDetailParamsItem) {
    this.schemeDetailParams.add(schemeDetailParamsItem);
    return this;
  }

   /**
   * Get schemeDetailParams
   * @return schemeDetailParams
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SCHEME_DETAIL_PARAMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<SchemeDetailParam> getSchemeDetailParams() {
    return schemeDetailParams;
  }


  public void setSchemeDetailParams(List<SchemeDetailParam> schemeDetailParams) {
    this.schemeDetailParams = schemeDetailParams;
  }


  public SchemeDetail schemeDetailArrayValues(List<SchemeDetailArrayValue> schemeDetailArrayValues) {
    
    this.schemeDetailArrayValues = schemeDetailArrayValues;
    return this;
  }

  public SchemeDetail addSchemeDetailArrayValuesItem(SchemeDetailArrayValue schemeDetailArrayValuesItem) {
    this.schemeDetailArrayValues.add(schemeDetailArrayValuesItem);
    return this;
  }

   /**
   * Get schemeDetailArrayValues
   * @return schemeDetailArrayValues
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SCHEME_DETAIL_ARRAY_VALUES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<SchemeDetailArrayValue> getSchemeDetailArrayValues() {
    return schemeDetailArrayValues;
  }


  public void setSchemeDetailArrayValues(List<SchemeDetailArrayValue> schemeDetailArrayValues) {
    this.schemeDetailArrayValues = schemeDetailArrayValues;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SchemeDetail schemeDetail = (SchemeDetail) o;
    return Objects.equals(this.itemIdentifier, schemeDetail.itemIdentifier) &&
        Objects.equals(this.ancestorItemIdentifier, schemeDetail.ancestorItemIdentifier) &&
        Objects.equals(this.stringValue, schemeDetail.stringValue) &&
        Objects.equals(this.booleanValue, schemeDetail.booleanValue) &&
        Objects.equals(this.dateValue, schemeDetail.dateValue) &&
        Objects.equals(this.integerValue, schemeDetail.integerValue) &&
        Objects.equals(this.decimalValue, schemeDetail.decimalValue) &&
        Objects.equals(this.moneyValue, schemeDetail.moneyValue) &&
        Objects.equals(this.schemeCalcValueType, schemeDetail.schemeCalcValueType) &&
        Objects.equals(this.comparator, schemeDetail.comparator) &&
        Objects.equals(this.parentCode, schemeDetail.parentCode) &&
        Objects.equals(this.condition, schemeDetail.condition) &&
        Objects.equals(this.forceValue, schemeDetail.forceValue) &&
        Objects.equals(this.timeDuration, schemeDetail.timeDuration) &&
        Objects.equals(this.costDiscount, schemeDetail.costDiscount) &&
        Objects.equals(this.minMax, schemeDetail.minMax) &&
        Objects.equals(this.currency, schemeDetail.currency) &&
        Objects.equals(this.schemeCostType, schemeDetail.schemeCostType) &&
        Objects.equals(this.schemeOperatorType, schemeDetail.schemeOperatorType) &&
        Objects.equals(this.schemeSourceType, schemeDetail.schemeSourceType) &&
        Objects.equals(this.schemeTimeframe, schemeDetail.schemeTimeframe) &&
        Objects.equals(this.schemeValueType, schemeDetail.schemeValueType) &&
        Objects.equals(this.schemeValidationType, schemeDetail.schemeValidationType) &&
        Objects.equals(this.scheme, schemeDetail.scheme) &&
        Objects.equals(this.schemeDetailParams, schemeDetail.schemeDetailParams) &&
        Objects.equals(this.schemeDetailArrayValues, schemeDetail.schemeDetailArrayValues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemIdentifier, ancestorItemIdentifier, stringValue, booleanValue, dateValue, integerValue, decimalValue, moneyValue, schemeCalcValueType, comparator, parentCode, condition, forceValue, timeDuration, costDiscount, minMax, currency, schemeCostType, schemeOperatorType, schemeSourceType, schemeTimeframe, schemeValueType, schemeValidationType, scheme, schemeDetailParams, schemeDetailArrayValues);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SchemeDetail {\n");
    sb.append("    itemIdentifier: ").append(toIndentedString(itemIdentifier)).append("\n");
    sb.append("    ancestorItemIdentifier: ").append(toIndentedString(ancestorItemIdentifier)).append("\n");
    sb.append("    stringValue: ").append(toIndentedString(stringValue)).append("\n");
    sb.append("    booleanValue: ").append(toIndentedString(booleanValue)).append("\n");
    sb.append("    dateValue: ").append(toIndentedString(dateValue)).append("\n");
    sb.append("    integerValue: ").append(toIndentedString(integerValue)).append("\n");
    sb.append("    decimalValue: ").append(toIndentedString(decimalValue)).append("\n");
    sb.append("    moneyValue: ").append(toIndentedString(moneyValue)).append("\n");
    sb.append("    schemeCalcValueType: ").append(toIndentedString(schemeCalcValueType)).append("\n");
    sb.append("    comparator: ").append(toIndentedString(comparator)).append("\n");
    sb.append("    parentCode: ").append(toIndentedString(parentCode)).append("\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    forceValue: ").append(toIndentedString(forceValue)).append("\n");
    sb.append("    timeDuration: ").append(toIndentedString(timeDuration)).append("\n");
    sb.append("    costDiscount: ").append(toIndentedString(costDiscount)).append("\n");
    sb.append("    minMax: ").append(toIndentedString(minMax)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    schemeCostType: ").append(toIndentedString(schemeCostType)).append("\n");
    sb.append("    schemeOperatorType: ").append(toIndentedString(schemeOperatorType)).append("\n");
    sb.append("    schemeSourceType: ").append(toIndentedString(schemeSourceType)).append("\n");
    sb.append("    schemeTimeframe: ").append(toIndentedString(schemeTimeframe)).append("\n");
    sb.append("    schemeValueType: ").append(toIndentedString(schemeValueType)).append("\n");
    sb.append("    schemeValidationType: ").append(toIndentedString(schemeValidationType)).append("\n");
    sb.append("    scheme: ").append(toIndentedString(scheme)).append("\n");
    sb.append("    schemeDetailParams: ").append(toIndentedString(schemeDetailParams)).append("\n");
    sb.append("    schemeDetailArrayValues: ").append(toIndentedString(schemeDetailArrayValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

