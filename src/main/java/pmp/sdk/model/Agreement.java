/*
 * Snippets API
 * Test description
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@snippets.local
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pmp.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Agreement
 */
@JsonPropertyOrder({
  Agreement.JSON_PROPERTY_ITEM_IDENTIFIER,
  Agreement.JSON_PROPERTY_EFFECTIVE_DATE,
  Agreement.JSON_PROPERTY_EXPIRATION_DATE,
  Agreement.JSON_PROPERTY_CODE,
  Agreement.JSON_PROPERTY_LOCKED,
  Agreement.JSON_PROPERTY_JSON_STRING,
  Agreement.JSON_PROPERTY_ANCESTOR_ITEM_IDENTIFIER,
  Agreement.JSON_PROPERTY_VERSION_NUMBER,
  Agreement.JSON_PROPERTY_ITEM_STATUS,
  Agreement.JSON_PROPERTY_NAME,
  Agreement.JSON_PROPERTY_AGREEMENT_NUMBER,
  Agreement.JSON_PROPERTY_ACCEPTANCE_DATE,
  Agreement.JSON_PROPERTY_DESCRIPTION,
  Agreement.JSON_PROPERTY_CUSTOMER_AGREEMENT_NO,
  Agreement.JSON_PROPERTY_CANCELED_DATE,
  Agreement.JSON_PROPERTY_CANCEL_REASON_DESC,
  Agreement.JSON_PROPERTY_CANCEL_REASON,
  Agreement.JSON_PROPERTY_AGREEMENT_STATUS,
  Agreement.JSON_PROPERTY_AGREEMENT_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-07-30T00:50:45.283009+02:00[Europe/Warsaw]")
public class Agreement {
  public static final String JSON_PROPERTY_ITEM_IDENTIFIER = "itemIdentifier";
  private String itemIdentifier;

  public static final String JSON_PROPERTY_EFFECTIVE_DATE = "effectiveDate";
  private String effectiveDate;

  public static final String JSON_PROPERTY_EXPIRATION_DATE = "expirationDate";
  private JsonNullable<String> expirationDate = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_LOCKED = "locked";
  private Boolean locked;

  public static final String JSON_PROPERTY_JSON_STRING = "jsonString";
  private JsonNullable<String> jsonString = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ANCESTOR_ITEM_IDENTIFIER = "ancestorItemIdentifier";
  private JsonNullable<String> ancestorItemIdentifier = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_NUMBER = "versionNumber";
  private Integer versionNumber;

  /**
   * Gets or Sets itemStatus
   */
  public enum ItemStatusEnum {
    DRAFT("draft"),
    
    STAGE("stage"),
    
    APPROVED("approved");

    private String value;

    ItemStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ItemStatusEnum fromValue(String value) {
      for (ItemStatusEnum b : ItemStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ITEM_STATUS = "itemStatus";
  private ItemStatusEnum itemStatus;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_AGREEMENT_NUMBER = "agreementNumber";
  private String agreementNumber;

  public static final String JSON_PROPERTY_ACCEPTANCE_DATE = "acceptanceDate";
  private JsonNullable<Date> acceptanceDate = JsonNullable.<Date>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_CUSTOMER_AGREEMENT_NO = "customerAgreementNo";
  private String customerAgreementNo;

  public static final String JSON_PROPERTY_CANCELED_DATE = "canceledDate";
  private JsonNullable<Date> canceledDate = JsonNullable.<Date>undefined();

  public static final String JSON_PROPERTY_CANCEL_REASON_DESC = "cancelReasonDesc";
  private String cancelReasonDesc;

  /**
   * Gets or Sets cancelReason
   */
  public enum CancelReasonEnum {
    CANCEL_BY_CARRIER("cancel_by_carrier"),
    
    CANCEL_BY_CLIENT("cancel_by_client"),
    
    MUTUAL_AGREEMENT("mutual_agreement");

    private String value;

    CancelReasonEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CancelReasonEnum fromValue(String value) {
      for (CancelReasonEnum b : CancelReasonEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_CANCEL_REASON = "cancelReason";
  private JsonNullable<CancelReasonEnum> cancelReason = JsonNullable.<CancelReasonEnum>undefined();

  /**
   * Gets or Sets agreementStatus
   */
  public enum AgreementStatusEnum {
    NEW("new"),
    
    WITHDRAWN("withdrawn"),
    
    BOUND("bound"),
    
    CANCELED("canceled"),
    
    NEGOTIATED("negotiated"),
    
    FINISHED("finished");

    private String value;

    AgreementStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AgreementStatusEnum fromValue(String value) {
      for (AgreementStatusEnum b : AgreementStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AGREEMENT_STATUS = "agreementStatus";
  private AgreementStatusEnum agreementStatus;

  /**
   * Gets or Sets agreementType
   */
  public enum AgreementTypeEnum {
    GENERALAGREEMENT("GeneralAgreement"),
    
    GENERALOFFER("GeneralOffer"),
    
    REGULARAGREEMENT("RegularAgreement"),
    
    COOPERATIONAGREEMENT("CooperationAgreement");

    private String value;

    AgreementTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AgreementTypeEnum fromValue(String value) {
      for (AgreementTypeEnum b : AgreementTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AGREEMENT_TYPE = "agreementType";
  private AgreementTypeEnum agreementType;


  public Agreement itemIdentifier(String itemIdentifier) {
    
    this.itemIdentifier = itemIdentifier;
    return this;
  }

   /**
   * Get itemIdentifier
   * @return itemIdentifier
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ITEM_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getItemIdentifier() {
    return itemIdentifier;
  }


  public void setItemIdentifier(String itemIdentifier) {
    this.itemIdentifier = itemIdentifier;
  }


  public Agreement effectiveDate(String effectiveDate) {
    
    this.effectiveDate = effectiveDate;
    return this;
  }

   /**
   * Get effectiveDate
   * @return effectiveDate
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_EFFECTIVE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEffectiveDate() {
    return effectiveDate;
  }


  public void setEffectiveDate(String effectiveDate) {
    this.effectiveDate = effectiveDate;
  }


  public Agreement expirationDate(String expirationDate) {
    this.expirationDate = JsonNullable.<String>of(expirationDate);
    
    return this;
  }

   /**
   * Get expirationDate
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getExpirationDate() {
        return expirationDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<String> getExpirationDate_JsonNullable() {
    return expirationDate;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  public void setExpirationDate_JsonNullable(JsonNullable<String> expirationDate) {
    this.expirationDate = expirationDate;
  }

  public void setExpirationDate(String expirationDate) {
    this.expirationDate = JsonNullable.<String>of(expirationDate);
  }


  public Agreement code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }


  public Agreement locked(Boolean locked) {
    
    this.locked = locked;
    return this;
  }

   /**
   * Get locked
   * @return locked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOCKED)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public Boolean getLocked() {
    return locked;
  }


  public void setLocked(Boolean locked) {
    this.locked = locked;
  }


  public Agreement jsonString(String jsonString) {
    this.jsonString = JsonNullable.<String>of(jsonString);
    
    return this;
  }

   /**
   * Get jsonString
   * @return jsonString
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getJsonString() {
        return jsonString.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_JSON_STRING)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<String> getJsonString_JsonNullable() {
    return jsonString;
  }
  
  @JsonProperty(JSON_PROPERTY_JSON_STRING)
  public void setJsonString_JsonNullable(JsonNullable<String> jsonString) {
    this.jsonString = jsonString;
  }

  public void setJsonString(String jsonString) {
    this.jsonString = JsonNullable.<String>of(jsonString);
  }


  public Agreement ancestorItemIdentifier(String ancestorItemIdentifier) {
    this.ancestorItemIdentifier = JsonNullable.<String>of(ancestorItemIdentifier);
    
    return this;
  }

   /**
   * Get ancestorItemIdentifier
   * @return ancestorItemIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getAncestorItemIdentifier() {
        return ancestorItemIdentifier.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ANCESTOR_ITEM_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<String> getAncestorItemIdentifier_JsonNullable() {
    return ancestorItemIdentifier;
  }
  
  @JsonProperty(JSON_PROPERTY_ANCESTOR_ITEM_IDENTIFIER)
  public void setAncestorItemIdentifier_JsonNullable(JsonNullable<String> ancestorItemIdentifier) {
    this.ancestorItemIdentifier = ancestorItemIdentifier;
  }

  public void setAncestorItemIdentifier(String ancestorItemIdentifier) {
    this.ancestorItemIdentifier = JsonNullable.<String>of(ancestorItemIdentifier);
  }


  public Agreement versionNumber(Integer versionNumber) {
    
    this.versionNumber = versionNumber;
    return this;
  }

   /**
   * Get versionNumber
   * minimum: -2147483648
   * maximum: 2147483647
   * @return versionNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VERSION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public Integer getVersionNumber() {
    return versionNumber;
  }


  public void setVersionNumber(Integer versionNumber) {
    this.versionNumber = versionNumber;
  }


  public Agreement itemStatus(ItemStatusEnum itemStatus) {
    
    this.itemStatus = itemStatus;
    return this;
  }

   /**
   * Get itemStatus
   * @return itemStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ITEM_STATUS)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public ItemStatusEnum getItemStatus() {
    return itemStatus;
  }


  public void setItemStatus(ItemStatusEnum itemStatus) {
    this.itemStatus = itemStatus;
  }


  public Agreement name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Agreement agreementNumber(String agreementNumber) {
    
    this.agreementNumber = agreementNumber;
    return this;
  }

   /**
   * Get agreementNumber
   * @return agreementNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AGREEMENT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public String getAgreementNumber() {
    return agreementNumber;
  }


  public void setAgreementNumber(String agreementNumber) {
    this.agreementNumber = agreementNumber;
  }


  public Agreement acceptanceDate(Date acceptanceDate) {
    this.acceptanceDate = JsonNullable.<Date>of(acceptanceDate);
    
    return this;
  }

   /**
   * Get acceptanceDate
   * @return acceptanceDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Date getAcceptanceDate() {
        return acceptanceDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ACCEPTANCE_DATE)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<Date> getAcceptanceDate_JsonNullable() {
    return acceptanceDate;
  }
  
  @JsonProperty(JSON_PROPERTY_ACCEPTANCE_DATE)
  public void setAcceptanceDate_JsonNullable(JsonNullable<Date> acceptanceDate) {
    this.acceptanceDate = acceptanceDate;
  }

  public void setAcceptanceDate(Date acceptanceDate) {
    this.acceptanceDate = JsonNullable.<Date>of(acceptanceDate);
  }


  public Agreement description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Agreement customerAgreementNo(String customerAgreementNo) {
    
    this.customerAgreementNo = customerAgreementNo;
    return this;
  }

   /**
   * Get customerAgreementNo
   * @return customerAgreementNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CUSTOMER_AGREEMENT_NO)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public String getCustomerAgreementNo() {
    return customerAgreementNo;
  }


  public void setCustomerAgreementNo(String customerAgreementNo) {
    this.customerAgreementNo = customerAgreementNo;
  }


  public Agreement canceledDate(Date canceledDate) {
    this.canceledDate = JsonNullable.<Date>of(canceledDate);
    
    return this;
  }

   /**
   * Get canceledDate
   * @return canceledDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Date getCanceledDate() {
        return canceledDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CANCELED_DATE)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<Date> getCanceledDate_JsonNullable() {
    return canceledDate;
  }
  
  @JsonProperty(JSON_PROPERTY_CANCELED_DATE)
  public void setCanceledDate_JsonNullable(JsonNullable<Date> canceledDate) {
    this.canceledDate = canceledDate;
  }

  public void setCanceledDate(Date canceledDate) {
    this.canceledDate = JsonNullable.<Date>of(canceledDate);
  }


  public Agreement cancelReasonDesc(String cancelReasonDesc) {
    
    this.cancelReasonDesc = cancelReasonDesc;
    return this;
  }

   /**
   * Get cancelReasonDesc
   * @return cancelReasonDesc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CANCEL_REASON_DESC)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public String getCancelReasonDesc() {
    return cancelReasonDesc;
  }


  public void setCancelReasonDesc(String cancelReasonDesc) {
    this.cancelReasonDesc = cancelReasonDesc;
  }


  public Agreement cancelReason(CancelReasonEnum cancelReason) {
    this.cancelReason = JsonNullable.<CancelReasonEnum>of(cancelReason);
    
    return this;
  }

   /**
   * Get cancelReason
   * @return cancelReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public CancelReasonEnum getCancelReason() {
        return cancelReason.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CANCEL_REASON)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<CancelReasonEnum> getCancelReason_JsonNullable() {
    return cancelReason;
  }
  
  @JsonProperty(JSON_PROPERTY_CANCEL_REASON)
  public void setCancelReason_JsonNullable(JsonNullable<CancelReasonEnum> cancelReason) {
    this.cancelReason = cancelReason;
  }

  public void setCancelReason(CancelReasonEnum cancelReason) {
    this.cancelReason = JsonNullable.<CancelReasonEnum>of(cancelReason);
  }


  public Agreement agreementStatus(AgreementStatusEnum agreementStatus) {
    
    this.agreementStatus = agreementStatus;
    return this;
  }

   /**
   * Get agreementStatus
   * @return agreementStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AGREEMENT_STATUS)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public AgreementStatusEnum getAgreementStatus() {
    return agreementStatus;
  }


  public void setAgreementStatus(AgreementStatusEnum agreementStatus) {
    this.agreementStatus = agreementStatus;
  }


  public Agreement agreementType(AgreementTypeEnum agreementType) {
    
    this.agreementType = agreementType;
    return this;
  }

   /**
   * Get agreementType
   * @return agreementType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AGREEMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public AgreementTypeEnum getAgreementType() {
    return agreementType;
  }


  public void setAgreementType(AgreementTypeEnum agreementType) {
    this.agreementType = agreementType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Agreement agreement = (Agreement) o;
    return Objects.equals(this.itemIdentifier, agreement.itemIdentifier) &&
        Objects.equals(this.effectiveDate, agreement.effectiveDate) &&
        Objects.equals(this.expirationDate, agreement.expirationDate) &&
        Objects.equals(this.code, agreement.code) &&
        Objects.equals(this.locked, agreement.locked) &&
        Objects.equals(this.jsonString, agreement.jsonString) &&
        Objects.equals(this.ancestorItemIdentifier, agreement.ancestorItemIdentifier) &&
        Objects.equals(this.versionNumber, agreement.versionNumber) &&
        Objects.equals(this.itemStatus, agreement.itemStatus) &&
        Objects.equals(this.name, agreement.name) &&
        Objects.equals(this.agreementNumber, agreement.agreementNumber) &&
        Objects.equals(this.acceptanceDate, agreement.acceptanceDate) &&
        Objects.equals(this.description, agreement.description) &&
        Objects.equals(this.customerAgreementNo, agreement.customerAgreementNo) &&
        Objects.equals(this.canceledDate, agreement.canceledDate) &&
        Objects.equals(this.cancelReasonDesc, agreement.cancelReasonDesc) &&
        Objects.equals(this.cancelReason, agreement.cancelReason) &&
        Objects.equals(this.agreementStatus, agreement.agreementStatus) &&
        Objects.equals(this.agreementType, agreement.agreementType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemIdentifier, effectiveDate, expirationDate, code, locked, jsonString, ancestorItemIdentifier, versionNumber, itemStatus, name, agreementNumber, acceptanceDate, description, customerAgreementNo, canceledDate, cancelReasonDesc, cancelReason, agreementStatus, agreementType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Agreement {\n");
    sb.append("    itemIdentifier: ").append(toIndentedString(itemIdentifier)).append("\n");
    sb.append("    effectiveDate: ").append(toIndentedString(effectiveDate)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    jsonString: ").append(toIndentedString(jsonString)).append("\n");
    sb.append("    ancestorItemIdentifier: ").append(toIndentedString(ancestorItemIdentifier)).append("\n");
    sb.append("    versionNumber: ").append(toIndentedString(versionNumber)).append("\n");
    sb.append("    itemStatus: ").append(toIndentedString(itemStatus)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    agreementNumber: ").append(toIndentedString(agreementNumber)).append("\n");
    sb.append("    acceptanceDate: ").append(toIndentedString(acceptanceDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    customerAgreementNo: ").append(toIndentedString(customerAgreementNo)).append("\n");
    sb.append("    canceledDate: ").append(toIndentedString(canceledDate)).append("\n");
    sb.append("    cancelReasonDesc: ").append(toIndentedString(cancelReasonDesc)).append("\n");
    sb.append("    cancelReason: ").append(toIndentedString(cancelReason)).append("\n");
    sb.append("    agreementStatus: ").append(toIndentedString(agreementStatus)).append("\n");
    sb.append("    agreementType: ").append(toIndentedString(agreementType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

