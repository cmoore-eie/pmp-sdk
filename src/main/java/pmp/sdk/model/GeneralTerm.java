/*
 * Snippets API
 * Test description
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@snippets.local
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pmp.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import pmp.sdk.model.GeneralTermCode;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * GeneralTerm
 */
@JsonPropertyOrder({
  GeneralTerm.JSON_PROPERTY_ITEM_IDENTIFIER,
  GeneralTerm.JSON_PROPERTY_GENERAL_TERM_CODES,
  GeneralTerm.JSON_PROPERTY_EFFECTIVE_DATE,
  GeneralTerm.JSON_PROPERTY_EXPIRATION_DATE,
  GeneralTerm.JSON_PROPERTY_CODE,
  GeneralTerm.JSON_PROPERTY_LOCKED,
  GeneralTerm.JSON_PROPERTY_JSON_STRING,
  GeneralTerm.JSON_PROPERTY_ANCESTOR_ITEM_IDENTIFIER,
  GeneralTerm.JSON_PROPERTY_VERSION_NUMBER,
  GeneralTerm.JSON_PROPERTY_ITEM_STATUS,
  GeneralTerm.JSON_PROPERTY_NAME,
  GeneralTerm.JSON_PROPERTY_PRODUCT_CODE,
  GeneralTerm.JSON_PROPERTY_LINE_CODE,
  GeneralTerm.JSON_PROPERTY_GENERAL_TERM_ATTACHMENT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-07-30T00:50:45.283009+02:00[Europe/Warsaw]")
public class GeneralTerm {
  public static final String JSON_PROPERTY_ITEM_IDENTIFIER = "itemIdentifier";
  private String itemIdentifier;

  public static final String JSON_PROPERTY_GENERAL_TERM_CODES = "generalTermCodes";
  private List<GeneralTermCode> generalTermCodes = new ArrayList<>();

  public static final String JSON_PROPERTY_EFFECTIVE_DATE = "effectiveDate";
  private String effectiveDate;

  public static final String JSON_PROPERTY_EXPIRATION_DATE = "expirationDate";
  private JsonNullable<String> expirationDate = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_LOCKED = "locked";
  private Boolean locked;

  public static final String JSON_PROPERTY_JSON_STRING = "jsonString";
  private JsonNullable<String> jsonString = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ANCESTOR_ITEM_IDENTIFIER = "ancestorItemIdentifier";
  private JsonNullable<String> ancestorItemIdentifier = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_NUMBER = "versionNumber";
  private Integer versionNumber;

  /**
   * Gets or Sets itemStatus
   */
  public enum ItemStatusEnum {
    DRAFT("draft"),
    
    STAGE("stage"),
    
    APPROVED("approved");

    private String value;

    ItemStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ItemStatusEnum fromValue(String value) {
      for (ItemStatusEnum b : ItemStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ITEM_STATUS = "itemStatus";
  private ItemStatusEnum itemStatus;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PRODUCT_CODE = "productCode";
  private String productCode;

  public static final String JSON_PROPERTY_LINE_CODE = "lineCode";
  private String lineCode;

  /**
   * Gets or Sets generalTermAttachment
   */
  public enum GeneralTermAttachmentEnum {
    POLICY("policy"),
    
    LINE("line");

    private String value;

    GeneralTermAttachmentEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static GeneralTermAttachmentEnum fromValue(String value) {
      for (GeneralTermAttachmentEnum b : GeneralTermAttachmentEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_GENERAL_TERM_ATTACHMENT = "GeneralTermAttachment";
  private GeneralTermAttachmentEnum generalTermAttachment;


  public GeneralTerm itemIdentifier(String itemIdentifier) {
    
    this.itemIdentifier = itemIdentifier;
    return this;
  }

   /**
   * Get itemIdentifier
   * @return itemIdentifier
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ITEM_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getItemIdentifier() {
    return itemIdentifier;
  }


  public void setItemIdentifier(String itemIdentifier) {
    this.itemIdentifier = itemIdentifier;
  }


  public GeneralTerm generalTermCodes(List<GeneralTermCode> generalTermCodes) {
    
    this.generalTermCodes = generalTermCodes;
    return this;
  }

  public GeneralTerm addGeneralTermCodesItem(GeneralTermCode generalTermCodesItem) {
    this.generalTermCodes.add(generalTermCodesItem);
    return this;
  }

   /**
   * Get generalTermCodes
   * @return generalTermCodes
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_GENERAL_TERM_CODES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<GeneralTermCode> getGeneralTermCodes() {
    return generalTermCodes;
  }


  public void setGeneralTermCodes(List<GeneralTermCode> generalTermCodes) {
    this.generalTermCodes = generalTermCodes;
  }


  public GeneralTerm effectiveDate(String effectiveDate) {
    
    this.effectiveDate = effectiveDate;
    return this;
  }

   /**
   * Get effectiveDate
   * @return effectiveDate
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_EFFECTIVE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEffectiveDate() {
    return effectiveDate;
  }


  public void setEffectiveDate(String effectiveDate) {
    this.effectiveDate = effectiveDate;
  }


  public GeneralTerm expirationDate(String expirationDate) {
    this.expirationDate = JsonNullable.<String>of(expirationDate);
    
    return this;
  }

   /**
   * Get expirationDate
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getExpirationDate() {
        return expirationDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<String> getExpirationDate_JsonNullable() {
    return expirationDate;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  public void setExpirationDate_JsonNullable(JsonNullable<String> expirationDate) {
    this.expirationDate = expirationDate;
  }

  public void setExpirationDate(String expirationDate) {
    this.expirationDate = JsonNullable.<String>of(expirationDate);
  }


  public GeneralTerm code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }


  public GeneralTerm locked(Boolean locked) {
    
    this.locked = locked;
    return this;
  }

   /**
   * Get locked
   * @return locked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOCKED)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public Boolean getLocked() {
    return locked;
  }


  public void setLocked(Boolean locked) {
    this.locked = locked;
  }


  public GeneralTerm jsonString(String jsonString) {
    this.jsonString = JsonNullable.<String>of(jsonString);
    
    return this;
  }

   /**
   * Get jsonString
   * @return jsonString
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getJsonString() {
        return jsonString.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_JSON_STRING)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<String> getJsonString_JsonNullable() {
    return jsonString;
  }
  
  @JsonProperty(JSON_PROPERTY_JSON_STRING)
  public void setJsonString_JsonNullable(JsonNullable<String> jsonString) {
    this.jsonString = jsonString;
  }

  public void setJsonString(String jsonString) {
    this.jsonString = JsonNullable.<String>of(jsonString);
  }


  public GeneralTerm ancestorItemIdentifier(String ancestorItemIdentifier) {
    this.ancestorItemIdentifier = JsonNullable.<String>of(ancestorItemIdentifier);
    
    return this;
  }

   /**
   * Get ancestorItemIdentifier
   * @return ancestorItemIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getAncestorItemIdentifier() {
        return ancestorItemIdentifier.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ANCESTOR_ITEM_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<String> getAncestorItemIdentifier_JsonNullable() {
    return ancestorItemIdentifier;
  }
  
  @JsonProperty(JSON_PROPERTY_ANCESTOR_ITEM_IDENTIFIER)
  public void setAncestorItemIdentifier_JsonNullable(JsonNullable<String> ancestorItemIdentifier) {
    this.ancestorItemIdentifier = ancestorItemIdentifier;
  }

  public void setAncestorItemIdentifier(String ancestorItemIdentifier) {
    this.ancestorItemIdentifier = JsonNullable.<String>of(ancestorItemIdentifier);
  }


  public GeneralTerm versionNumber(Integer versionNumber) {
    
    this.versionNumber = versionNumber;
    return this;
  }

   /**
   * Get versionNumber
   * minimum: -2147483648
   * maximum: 2147483647
   * @return versionNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VERSION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public Integer getVersionNumber() {
    return versionNumber;
  }


  public void setVersionNumber(Integer versionNumber) {
    this.versionNumber = versionNumber;
  }


  public GeneralTerm itemStatus(ItemStatusEnum itemStatus) {
    
    this.itemStatus = itemStatus;
    return this;
  }

   /**
   * Get itemStatus
   * @return itemStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ITEM_STATUS)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public ItemStatusEnum getItemStatus() {
    return itemStatus;
  }


  public void setItemStatus(ItemStatusEnum itemStatus) {
    this.itemStatus = itemStatus;
  }


  public GeneralTerm name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public GeneralTerm productCode(String productCode) {
    
    this.productCode = productCode;
    return this;
  }

   /**
   * Get productCode
   * @return productCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PRODUCT_CODE)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public String getProductCode() {
    return productCode;
  }


  public void setProductCode(String productCode) {
    this.productCode = productCode;
  }


  public GeneralTerm lineCode(String lineCode) {
    
    this.lineCode = lineCode;
    return this;
  }

   /**
   * Get lineCode
   * @return lineCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LINE_CODE)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public String getLineCode() {
    return lineCode;
  }


  public void setLineCode(String lineCode) {
    this.lineCode = lineCode;
  }


  public GeneralTerm generalTermAttachment(GeneralTermAttachmentEnum generalTermAttachment) {
    
    this.generalTermAttachment = generalTermAttachment;
    return this;
  }

   /**
   * Get generalTermAttachment
   * @return generalTermAttachment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GENERAL_TERM_ATTACHMENT)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public GeneralTermAttachmentEnum getGeneralTermAttachment() {
    return generalTermAttachment;
  }


  public void setGeneralTermAttachment(GeneralTermAttachmentEnum generalTermAttachment) {
    this.generalTermAttachment = generalTermAttachment;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeneralTerm generalTerm = (GeneralTerm) o;
    return Objects.equals(this.itemIdentifier, generalTerm.itemIdentifier) &&
        Objects.equals(this.generalTermCodes, generalTerm.generalTermCodes) &&
        Objects.equals(this.effectiveDate, generalTerm.effectiveDate) &&
        Objects.equals(this.expirationDate, generalTerm.expirationDate) &&
        Objects.equals(this.code, generalTerm.code) &&
        Objects.equals(this.locked, generalTerm.locked) &&
        Objects.equals(this.jsonString, generalTerm.jsonString) &&
        Objects.equals(this.ancestorItemIdentifier, generalTerm.ancestorItemIdentifier) &&
        Objects.equals(this.versionNumber, generalTerm.versionNumber) &&
        Objects.equals(this.itemStatus, generalTerm.itemStatus) &&
        Objects.equals(this.name, generalTerm.name) &&
        Objects.equals(this.productCode, generalTerm.productCode) &&
        Objects.equals(this.lineCode, generalTerm.lineCode) &&
        Objects.equals(this.generalTermAttachment, generalTerm.generalTermAttachment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemIdentifier, generalTermCodes, effectiveDate, expirationDate, code, locked, jsonString, ancestorItemIdentifier, versionNumber, itemStatus, name, productCode, lineCode, generalTermAttachment);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeneralTerm {\n");
    sb.append("    itemIdentifier: ").append(toIndentedString(itemIdentifier)).append("\n");
    sb.append("    generalTermCodes: ").append(toIndentedString(generalTermCodes)).append("\n");
    sb.append("    effectiveDate: ").append(toIndentedString(effectiveDate)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    jsonString: ").append(toIndentedString(jsonString)).append("\n");
    sb.append("    ancestorItemIdentifier: ").append(toIndentedString(ancestorItemIdentifier)).append("\n");
    sb.append("    versionNumber: ").append(toIndentedString(versionNumber)).append("\n");
    sb.append("    itemStatus: ").append(toIndentedString(itemStatus)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    lineCode: ").append(toIndentedString(lineCode)).append("\n");
    sb.append("    generalTermAttachment: ").append(toIndentedString(generalTermAttachment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

