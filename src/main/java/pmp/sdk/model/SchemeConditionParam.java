/*
 * Snippets API
 * Test description
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@snippets.local
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pmp.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * SchemeConditionParam
 */
@JsonPropertyOrder({
  SchemeConditionParam.JSON_PROPERTY_ITEM_IDENTIFIER,
  SchemeConditionParam.JSON_PROPERTY_ANCESTOR_ITEM_IDENTIFIER,
  SchemeConditionParam.JSON_PROPERTY_PARAMETER,
  SchemeConditionParam.JSON_PROPERTY_NAME,
  SchemeConditionParam.JSON_PROPERTY_PARAM_VALUE_TYPE,
  SchemeConditionParam.JSON_PROPERTY_SCHEME_CONDITION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-07-30T00:50:45.283009+02:00[Europe/Warsaw]")
public class SchemeConditionParam {
  public static final String JSON_PROPERTY_ITEM_IDENTIFIER = "itemIdentifier";
  private String itemIdentifier;

  public static final String JSON_PROPERTY_ANCESTOR_ITEM_IDENTIFIER = "ancestorItemIdentifier";
  private JsonNullable<String> ancestorItemIdentifier = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PARAMETER = "parameter";
  private String parameter;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  /**
   * Gets or Sets paramValueType
   */
  public enum ParamValueTypeEnum {
    STRING("string"),
    
    OBJECT("object"),
    
    CALCULATED("calculated"),
    
    OTHER("other"),
    
    LIST("list"),
    
    STRING_MULTILINE("string_multiline"),
    
    BOOLEAN("boolean"),
    
    INTEGER("integer"),
    
    INTEGER_RANGE("integer_range"),
    
    INTEGER_SET("integer_set"),
    
    MONEY_RANGE("money_range"),
    
    MONEY_SET("money_set"),
    
    LONG("long"),
    
    DECIMAL("decimal"),
    
    DATE("date"),
    
    MONEY("money"),
    
    TYPEKEY("typekey"),
    
    OPTION("option"),
    
    LABEL("label"),
    
    LOCATION("location"),
    
    MONEY_USD("money_usd"),
    
    MONEY_EUR("money_eur"),
    
    MONEY_GBP("money_gbp"),
    
    PERCENT("percent"),
    
    PERCENTDEC("percentdec"),
    
    YEAR("year"),
    
    ADDRESS("address"),
    
    AFPFUNCTION("afpfunction");

    private String value;

    ParamValueTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ParamValueTypeEnum fromValue(String value) {
      for (ParamValueTypeEnum b : ParamValueTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PARAM_VALUE_TYPE = "paramValueType";
  private ParamValueTypeEnum paramValueType;

  public static final String JSON_PROPERTY_SCHEME_CONDITION = "schemeCondition";
  private JsonNullable<String> schemeCondition = JsonNullable.<String>undefined();


  public SchemeConditionParam itemIdentifier(String itemIdentifier) {
    
    this.itemIdentifier = itemIdentifier;
    return this;
  }

   /**
   * Get itemIdentifier
   * @return itemIdentifier
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ITEM_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getItemIdentifier() {
    return itemIdentifier;
  }


  public void setItemIdentifier(String itemIdentifier) {
    this.itemIdentifier = itemIdentifier;
  }


  public SchemeConditionParam ancestorItemIdentifier(String ancestorItemIdentifier) {
    this.ancestorItemIdentifier = JsonNullable.<String>of(ancestorItemIdentifier);
    
    return this;
  }

   /**
   * Get ancestorItemIdentifier
   * @return ancestorItemIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getAncestorItemIdentifier() {
        return ancestorItemIdentifier.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ANCESTOR_ITEM_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<String> getAncestorItemIdentifier_JsonNullable() {
    return ancestorItemIdentifier;
  }
  
  @JsonProperty(JSON_PROPERTY_ANCESTOR_ITEM_IDENTIFIER)
  public void setAncestorItemIdentifier_JsonNullable(JsonNullable<String> ancestorItemIdentifier) {
    this.ancestorItemIdentifier = ancestorItemIdentifier;
  }

  public void setAncestorItemIdentifier(String ancestorItemIdentifier) {
    this.ancestorItemIdentifier = JsonNullable.<String>of(ancestorItemIdentifier);
  }


  public SchemeConditionParam parameter(String parameter) {
    
    this.parameter = parameter;
    return this;
  }

   /**
   * Get parameter
   * @return parameter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PARAMETER)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public String getParameter() {
    return parameter;
  }


  public void setParameter(String parameter) {
    this.parameter = parameter;
  }


  public SchemeConditionParam name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public SchemeConditionParam paramValueType(ParamValueTypeEnum paramValueType) {
    
    this.paramValueType = paramValueType;
    return this;
  }

   /**
   * Get paramValueType
   * @return paramValueType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PARAM_VALUE_TYPE)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public ParamValueTypeEnum getParamValueType() {
    return paramValueType;
  }


  public void setParamValueType(ParamValueTypeEnum paramValueType) {
    this.paramValueType = paramValueType;
  }


  public SchemeConditionParam schemeCondition(String schemeCondition) {
    this.schemeCondition = JsonNullable.<String>of(schemeCondition);
    
    return this;
  }

   /**
   * Get schemeCondition
   * @return schemeCondition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSchemeCondition() {
        return schemeCondition.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SCHEME_CONDITION)
  @JsonInclude(value = JsonInclude.Include.NON_DEFAULT)

  public JsonNullable<String> getSchemeCondition_JsonNullable() {
    return schemeCondition;
  }
  
  @JsonProperty(JSON_PROPERTY_SCHEME_CONDITION)
  public void setSchemeCondition_JsonNullable(JsonNullable<String> schemeCondition) {
    this.schemeCondition = schemeCondition;
  }

  public void setSchemeCondition(String schemeCondition) {
    this.schemeCondition = JsonNullable.<String>of(schemeCondition);
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SchemeConditionParam schemeConditionParam = (SchemeConditionParam) o;
    return Objects.equals(this.itemIdentifier, schemeConditionParam.itemIdentifier) &&
        Objects.equals(this.ancestorItemIdentifier, schemeConditionParam.ancestorItemIdentifier) &&
        Objects.equals(this.parameter, schemeConditionParam.parameter) &&
        Objects.equals(this.name, schemeConditionParam.name) &&
        Objects.equals(this.paramValueType, schemeConditionParam.paramValueType) &&
        Objects.equals(this.schemeCondition, schemeConditionParam.schemeCondition);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemIdentifier, ancestorItemIdentifier, parameter, name, paramValueType, schemeCondition);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SchemeConditionParam {\n");
    sb.append("    itemIdentifier: ").append(toIndentedString(itemIdentifier)).append("\n");
    sb.append("    ancestorItemIdentifier: ").append(toIndentedString(ancestorItemIdentifier)).append("\n");
    sb.append("    parameter: ").append(toIndentedString(parameter)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    paramValueType: ").append(toIndentedString(paramValueType)).append("\n");
    sb.append("    schemeCondition: ").append(toIndentedString(schemeCondition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

