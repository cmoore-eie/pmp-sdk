/*
 * Snippets API
 * Test description
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@snippets.local
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pmp.sdk.util;


import feign.RequestInterceptor;
import feign.RequestTemplate;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-07-30T00:50:45.283009+02:00[Europe/Warsaw]")
public class RequestInterceptorReplaceNulls implements RequestInterceptor {

    public static final String JSON_NULL_CODE_TAG  = "{\"code\":\"null\"}";
    public static final String JSON_NULL_TAG  = ":\"null\"";
    public static final String JSON_NULL  = "null";
    public static final String JSON_NULL_WITH_COLON  = ":null";

    @Override
    public void apply(RequestTemplate requestTemplate) {

        if(requestTemplate == null){
            return;
        }

        byte[] data = requestTemplate.body();

        if(data == null){
            return;
        }

        String body = new String(data);

        if(body.length() < 1){
            return;
        }

        String tmp = replaceNullCodeData(body);

        tmp = replaceNullData(tmp);
        requestTemplate.body(tmp);
    }

    private String replaceNullCodeData(String data) {

        StringBuilder buf = new StringBuilder();

        String tmp = data;

        int loc = 0;
        while(loc > -1){
            loc = tmp.indexOf(JSON_NULL_CODE_TAG);
            if(loc > -1) {
                buf.append(tmp.substring(0, loc));
                buf.append(JSON_NULL);
                tmp = tmp.substring(loc + JSON_NULL_CODE_TAG.length());
            }else{
                buf.append(tmp);
            }
        }
        return buf.toString();
    }
    private String replaceNullData(String data) {

        StringBuilder buf = new StringBuilder();

        String tmp = data;
        int loc = 0;
        while(loc > -1){
            loc = tmp.indexOf(JSON_NULL_TAG);
            if(loc > -1) {
                buf.append(tmp.substring(0, loc));
                buf.append(JSON_NULL_WITH_COLON);
                tmp = tmp.substring(loc + JSON_NULL_TAG.length());
            }else{
                buf.append(tmp);
            }
        }
        return buf.toString();
    }

}
